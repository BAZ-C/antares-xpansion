FROM antaresrte/xpansion-centos7:1.1.1



CMD ["/bin/bash"]

RUN mkdir /workspace

RUN echo "source /opt/rh/devtoolset-11/enable" >> /etc/bashrc
SHELL ["/bin/bash", "--login", "-c"]


RUN mkdir -p /workspace/vcpkg_cache
ARG VCPKG_CACHE_DIR
COPY $VCPKG_CACHE_DIR /workspace/


ARG BRANCH=develop
RUN cd /workspace && \
    source /opt/rh/rh-git227/enable && \
    git clone https://github.com/AntaresSimulatorTeam/antares-xpansion.git --depth=1 --single-branch --branch $BRANCH && \
    cd antares-xpansion && \
    git submodule update --init vcpkg && ./vcpkg/bootstrap-vcpkg.sh -disableMetrics && \
    export VCPKG_ROOT=/workspace/antares-xpansion/vcpkg




RUN ORTOOLS_TAG=$(cat /workspace/antares-xpansion/antares-version.json | jq -r '."or-tools-rte"' ) && \
    echo "ORTOOLS_TAG=$ORTOOLS_TAG" && \
    URL_ORTOOLS=https://github.com/rte-france/or-tools-rte/releases/download/v$ORTOOLS_TAG/ortools_cxx_centos7_static_sirius.zip && \
    mkdir -p ortools && cd ortools && \
            wget -q -O ortools.zip $URL_ORTOOLS && \
            unzip -q ortools.zip && \
            rm ortools.zip

RUN ANTARES_VERSION=$(cat /workspace/antares-xpansion/antares-version.json | jq -r '."antares_version"' ) && \
    echo "ANTARES_VERSION=$ANTARES_VERSION" && \
    mkdir -p deps && \
    URL_ANTARES=https://github.com/AntaresSimulatorTeam/Antares_Simulator/releases/download/v$ANTARES_VERSION/antares-${ANTARES_VERSION}-CentOS-7.9.2009.tar.gz && \
    wget $URL_ANTARES && \
    tar -xvf antares-${ANTARES_VERSION}-CentOS-7.9.2009.tar.gz -C deps --strip-components=1 &&\
    rm -rf antares-${ANTARES_VERSION}-CentOS-7.9.2009.tar.gz

WORKDIR /workspace/antares-xpansion

RUN pip3 install --upgrade pip && \
    pip3 install wheel && \
    pip3 install -r requirements-tests.txt

# Accept build arguments for ccache
ARG CCACHE_DIR
ARG CCACHE_KEY

# Copy ccache directory into the container
COPY ${CCACHE_DIR:-/dev/null} /workspace/.ccache

# Configure ccache environment variables
ENV CCACHE_DIR=/workspace/.ccache
ENV CCACHE_BASEDIR=/workspace
ENV CCACHE_COMPRESS=1
ENV PATH="/usr/lib/ccache:$PATH"

RUN  source /opt/rh/devtoolset-11/enable && \
     source /opt/rh/rh-git227/enable && \
     export VCPKG_BINARY_SOURCES="clear;files,/workspace/vcpkg_cache,readwrite" && \
     cmake -B _build -S . \
      -DBUILD_TESTING=ON \
      -DCMAKE_C_COMPILER_LAUNCHER=ccache \
      -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
      -DCMAKE_PREFIX_PATH="/deps;/ortools/install" \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=_install \
      -DALLOW_RUN_AS_ROOT=ON \
      -DVCPKG_TARGET_TRIPLET=x64-linux-release \
      -DCMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake

ARG NPROC=2
RUN  source /opt/rh/devtoolset-11/enable && \
     source /opt/rh/rh-git227/enable && \
     export VCPKG_BINARY_SOURCES="clear;files,/workspace/vcpkg_cache,readwrite" && \
     cmake --build _build --config Release -j${NPROC} &&\
     ccache -s
# tests
RUN export PATH=/root/miniconda3/condabin:$PATH && \
              XPRESS_DIR=/root/miniconda3/lib/python3.8/site-packages/xpress && \
              export XPRESSDIR=$XPRESS_DIR \
              export XPAUTH_PATH=$XPRESS_DIR/license/community-xpauth.xpr && \
              echo "Create symbolic link for XPRESS library file because it is missing in the Python installation" && \
              ln -s $XPRESS_DIR/lib/libxprs.so.42 $XPRESS_DIR/lib/libxprs.so && \
              export PATH="/workspace/antares-xpansion/_build/vcpkg_installed/x64-linux-release/tools/openmpi/bin:$PATH" && \
              pushd tests/end_to_end && \
              behave --tags ~@flaky  cucumber/features --no-capture --no-capture-stderr --format pretty && \
              popd && \
              cd _build && \
              ctest -C Release --output-on-failure -L "unit|benders|lpnamer|medium"
# Install
RUN cd _build && \
    cmake --install .

RUN   XPANSION_VERSION=$(cat /workspace/antares-xpansion/antares-version.json | jq -r '."antares_xpansion_version"' ) && \
      LSB_RELEASE_ID_SHORT=$(lsb_release --short --id) && \
      LSB_RELEASE_VERSION_SHORT=$(lsb_release --short --release) && \
       cd _install && \
      rm -f ./antares-xpansion-launcher* && \
      pyinstaller -F ../src/python/launch.py -n antares-xpansion-launcher --add-data "../src/python/config.yaml:." --add-data "./bin/:bin" && \
      mv ./dist/antares-xpansion-launcher* . && \
      rm -rf bin && \
      rm -rf build && \
      rm -rf dist && \
      rm -f *.spec && \
      cd .. &&\
      ARCHIVE_NAME=antaresXpansion-$XPANSION_VERSION-$LSB_RELEASE_ID_SHORT-$LSB_RELEASE_VERSION_SHORT-single-file.tar.gz && \
      tar -czf $ARCHIVE_NAME -C _install . && \
      mkdir -p archive/single && \
      mv $ARCHIVE_NAME archive/single

RUN  XPANSION_VERSION=$(cat /workspace/antares-xpansion/antares-version.json | jq -r '."antares_xpansion_version"' ) && \
     cd _build && \
     export FILE_NAME="antaresXpansion-$XPANSION_VERSION-CentOS-7.9.2009" && \
     cpack -G TGZ -D CPACK_PACKAGE_FILE_NAME=$FILE_NAME && \
     cd .. && \
     mkdir -p archive/multiple && \
     mv _build/${FILE_NAME}.tar.gz archive/multiple


